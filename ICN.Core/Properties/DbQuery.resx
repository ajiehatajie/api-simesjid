<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountDelete" xml:space="preserve">
    <value>delete from mst_accounts where account_id = ?id and account_userid =?userid</value>
    <comment>Delete Account</comment>
  </data>
  <data name="AccountGetAll" xml:space="preserve">
    <value>SELECT a.*,b.user_name,b.user_email FROM mst_accounts a
INNER JOIN mst_users b ON a.account_userid=b.user_id where account_userid = ?userId order by account_name asc</value>
    <comment>Get All Account</comment>
  </data>
  <data name="AccountNew" xml:space="preserve">
    <value>insert into mst_accounts (account_id,account_name,account_balance,account_desc,account_userid) values (?id,?name,?balance,?desc,?user)</value>
    <comment>Post New Account</comment>
  </data>
  <data name="AccountSearchByName" xml:space="preserve">
    <value>select * from mst_accounts where account_userid = ? userId and account_name LIKE CONCAT('%',?cari,'%')  order by account_name asc</value>
    <comment>Search Account By User name</comment>
  </data>
  <data name="AccountUpdate" xml:space="preserve">
    <value>update from mst_accounts set account_name=?name,account_balance=?balance,account_desc=?desc where account_id = ?id  and account_userid =?userid</value>
    <comment>Update Account</comment>
  </data>
  <data name="CategoryDetailByCategoryId" xml:space="preserve">
    <value>select * from mst_categories where category_userid = ?userId and category_id=?id order by category_name asc</value>
  </data>
  <data name="CategoryGetAll" xml:space="preserve">
    <value>select * from mst_categories where category_userid = ?userId order by category_name asc</value>
    <comment>Get All Category</comment>
  </data>
  <data name="CategorySearchByName" xml:space="preserve">
    <value>select * from mst_categories where category_userid = ? userId and category_name LIKE CONCAT('%',?cari,'%') order by category_name asc</value>
    <comment>Search Category By  name</comment>
  </data>
  <data name="ExpenseDelete" xml:space="preserve">
    <value>delete from trx_expenses where expense_id = ?id and expense_created_by =?userid</value>
  </data>
  <data name="ExpenseGetAll" xml:space="preserve">
    <value>select * from trx_expenses where expense_created_by = ?userId order by expense_created desc</value>
  </data>
  <data name="ExpenseNew" xml:space="preserve">
    <value>insert into trx_expenses (expense_id,expense_name,expense_amount,expense_ref,expense_date, 
                        expense_accountid,expense_categoryid,expense_subcategoryid,expense_note,expense_pictureid, 
                        expense_created_by,expense_settingid) values (?id,?name,?amount,?referency,?date,?account,?category,?subcategory 
                        ,?note,?picture,?userid,?settingid)</value>
  </data>
  <data name="ExpenseSearchByName" xml:space="preserve">
    <value>select * from trx_expenses where expense_created_by = ? userId and expense_name LIKE CONCAT('%',?cari,'%') order by expense_created desc</value>
  </data>
  <data name="ExpenseUpdate" xml:space="preserve">
    <value>update from trx_expenses set expense_name=?name,expense_amount=?amount,expense_ref=?referency 
                         expense_date=?date,expense_accountid=?account,expense_categoryid=?category, 
                         expense_subcategoryid=?subcategory,expense_note=?note,expense_pictureid=?picture,expense_updated=?updated,expense_updated_by=?userid where expense_id = ?id  and expense_created_by =?userid;</value>
  </data>
  <data name="IncomeDelete" xml:space="preserve">
    <value>delete from trx_incomes where income_id = ?id and income_created_by =?userid</value>
  </data>
  <data name="IncomeGetAll" xml:space="preserve">
    <value>select * from trx_incomes where income_created_by = ?userId order by income_created desc</value>
  </data>
  <data name="IncomeNew" xml:space="preserve">
    <value>insert into trx_incomes (income_id,income_name,income_amount,income_ref,income_date, 
                        income_accountid,income_categoryid,income_subcategoryid,income_note,income_pictureid, 
                        income_created_by,income_settingid) values (?id,?name,?amount,?referency,?date,?account,?category,?subcategory 
                        ,?note,?picture,?userid,?settingid)</value>
  </data>
  <data name="IncomeSearchByName" xml:space="preserve">
    <value>select * from trx_incomes where income_created_by = ? userId and income_name LIKE CONCAT('%',?cari,'%') order by income_created desc</value>
  </data>
  <data name="IncomeUpdate" xml:space="preserve">
    <value>update from trx_incomes set income_name=?name,income_amount=?amount,income_ref=?referency 
                         income_date=?date,income_accountid=?account,income_categoryid=?category, 
                         income_subcategoryid=?subcategory,income_note=?note,income_pictureid=?picture,income_updated=?updated,income_updated_by=?userid where income_id = ?id  and income_created_by =?userid;</value>
  </data>
  <data name="PictureDelete" xml:space="preserve">
    <value>delete from mst_pictures where picture_id = ?id and picture_created_by =?userid</value>
  </data>
  <data name="PictureNew" xml:space="preserve">
    <value>insert into mst_pictures (picture_id,picture_filename,picture_path,picture_created_by) values (?id,?name,?path,userid)</value>
  </data>
  <data name="PictureUpdate" xml:space="preserve">
    <value>update from mst_pictures set picture_filename=?name,picture_path=?path where picture_id = ?id  and picture_created_by =?userid</value>
  </data>
  <data name="RegisterNew" xml:space="preserve">
    <value>insert into mst_users (user_id,user_name,user_email,user_password) values (?id,?name,?email,?password)</value>
  </data>
  <data name="RegisterNewSetting" xml:space="preserve">
    <value>insert into mst_settings (setting_id,setting_mosque_name,setting_created_by) values (?id,?name,?userid)</value>
  </data>
  <data name="RolesInsertRegister" xml:space="preserve">
    <value>INSERT INTO mst_access (access_roleid,access_userid)
SELECT role_id,?userid FROM mst_roles</value>
  </data>
  <data name="RoleUserSearchById" xml:space="preserve">
    <value>SELECT * FROM vi_role_users where role_userid=?role_userid order by role_name asc</value>
  </data>
  <data name="SettingDelete" xml:space="preserve">
    <value>delete from mst_settings where setting_id = ?id and setting_created_by =?userid</value>
  </data>
  <data name="SettingGetAll" xml:space="preserve">
    <value>select * from mst_settings where setting_created_by = ?userId order by setting_mosque_name desc</value>
  </data>
  <data name="SettingNew" xml:space="preserve">
    <value>insert into mst_settings (setting_id,setting_mosque_name,setting_countries,setting_city,setting_web, 
                        setting_phone,setting_mosque_email,setting_currency,setting_address,setting_languange, 
                        setting_logo,setting_created_by) values (?id,?name,?country,?city,?web,?phone,?email,?currency 
                        ,?address,languange,logo,userid)</value>
  </data>
  <data name="SettingSearchByMosque" xml:space="preserve">
    <value>select * from mst_settings where setting_created_by = ? userId and setting_mosque_name LIKE CONCAT('%',?cari,'%') order by setting_created desc</value>
  </data>
  <data name="SettingUpdate" xml:space="preserve">
    <value>update from mst_settings set setting_mosque_name=?name,setting_countries=?country,setting_city=?city 
                         setting_web=?web,setting_phone=?phone,setting_mosque_email=?email, 
                         setting_currency=?currency,setting_address=?address,setting_languange=?languange,setting_logo=?logo where setting_id = ?id  and setting_created_by =?userid;</value>
  </data>
  <data name="SubCategoryDetail" xml:space="preserve">
    <value>select * from vi_subcategory where category_userid = ?userId and category_id=?id order by category_name asc</value>
  </data>
  <data name="SubCategoryGetAll" xml:space="preserve">
    <value>select * from vi_subcategory where category_userid = ?userId and parent_id=?parent order by category_name asc</value>
  </data>
  <data name="UserByUserId" xml:space="preserve">
    <value>select * from mst_users where user_id = ?userId order by user_name asc</value>
  </data>
  <data name="UserDelete" xml:space="preserve">
    <value>delete from mst_users where user_id = ?id</value>
  </data>
  <data name="UserGetAll" xml:space="preserve">
    <value>select * from mst_users</value>
  </data>
  <data name="UserNew" xml:space="preserve">
    <value>insert into mst_users (user_id,user_name,user_email,user_password,user_lastname,user_parentid) values (?id,?name,?email,?password,?lastname,?parent)</value>
  </data>
  <data name="UserSearchByName" xml:space="preserve">
    <value>select * from mst_users where user_id = ? userId and user_name LIKE CONCAT('%',?cari,'%') order by user_name asc</value>
  </data>
  <data name="UserUpdate" xml:space="preserve">
    <value>update from mst_users set user_name=?name,user_email=?email,user_password=?password,user_lastname=?lastname where user_id = ?userid</value>
  </data>
  <data name="UserSearchByEmail" xml:space="preserve">
    <value>select * from mst_users where user_email = ?email</value>
  </data>
  <data name="TreeGetBySettingId" xml:space="preserve">
    <value>select * from vi_tree where tree_settingid=?settingid order by tree_parentid asc</value>
  </data>
  <data name="TreeNew" xml:space="preserve">
    <value>INSERT INTO mst_tree (tree_id,tree_userid,tree_jobposition,tree_parentid,tree_settingid,setting_created_by) 
VALUES (?id,?userid,?job,?parent,?setting,?created_by)</value>
  </data>
  <data name="TreeSearchBySettingId" xml:space="preserve">
    <value>SELECT * FROM vi_tree WHERE tree_settingid=?settingid ORDER BY tree_parentid ASC</value>
  </data>
  <data name="CategoryDeleteById" xml:space="preserve">
    <value>delete from mst_categories where category_id = ?id and category_userid =?userid</value>
  </data>
  <data name="CategoryNew" xml:space="preserve">
    <value>insert into mst_categories (category_id,category_name,category_desc,category_type,category_color,category_userid) values (?id,?name,?desc,?type,?color,?user)</value>
  </data>
  <data name="CategoryUpdate" xml:space="preserve">
    <value>update from mst_categories set category_name=?name,category_desc=?desc,category_type=?type where account_id = ?id  and category_userid =?userid</value>
  </data>
  <data name="SubCategoryAdd" xml:space="preserve">
    <value>insert into mst_categories (category_id,category_name,category_desc,category_type,category_color,category_parentid,category_userid) values (?id,?name,?desc,?type,?color,?parent,?user)</value>
  </data>
  <data name="TreeDeleteById" xml:space="preserve">
    <value>DELETE FROM mst_tree WHERE tree_id=?id and tree_settingid=?settingid</value>
  </data>
</root>